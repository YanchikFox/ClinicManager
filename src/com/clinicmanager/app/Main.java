package com.clinicmanager.app;

import com.clinicmanager.app.Clinic;
import com.clinicmanager.controller.BaseControlPanel;
import com.clinicmanager.exception.RegistrationException;
import com.clinicmanager.repository.*;
import com.clinicmanager.security.TokenService;
import com.clinicmanager.service.AccountManager;
import com.clinicmanager.service.RegistrationService;

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        String dbUrl = "jdbc:sqlite:clinic.db";

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
        DatabaseInitializer.initialize(dbUrl, "src/main/resources/schema.sql");
        RepositoryManager repos = new RepositoryManager(dbUrl);
        AccountManager accountManager = new AccountManager(repos.accounts, new TokenService());
        RegistrationService registrationService = new RegistrationService(repos.accounts, repos.doctors, repos.patients);
        Clinic clinic = new Clinic(accountManager);

        Scanner scanner = new Scanner(System.in);

        System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: 1 - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, 2 - –í—Ö–æ–¥");
        String choice = scanner.nextLine();

        if (choice.equals("1")) {
            System.out.println("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: 1 - –í—Ä–∞—á, 2 - –ü–∞—Ü–∏–µ–Ω—Ç");
            String role = scanner.nextLine();

            System.out.print("Email: ");
            String email = scanner.nextLine();
            System.out.print("–ü–∞—Ä–æ–ª—å: ");
            String password = scanner.nextLine();
            System.out.print("–ò–º—è: ");
            String name = scanner.nextLine();
            System.out.print("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è (YYYY-MM-DD): ");
            String dob = scanner.nextLine();
            System.out.print("–¢–µ–ª–µ—Ñ–æ–Ω: ");
            String phone = scanner.nextLine();

            try {
                if (role.equals("1")) {
                    System.out.print("–ö–æ–¥ –ª–∏—Ü–µ–Ω–∑–∏–∏: ");
                    String license = scanner.nextLine();
                    registrationService.registerDoctor(email, password, name, dob, phone, license);
                    System.out.println("‚úÖ –í—Ä–∞—á –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!");
                } else if (role.equals("2")) {
                    registrationService.registerPatient(email, password, name, dob, phone);
                    System.out.println("‚úÖ –ü–∞—Ü–∏–µ–Ω—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!");
                } else {
                    System.out.println("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å");
                }
            } catch (RegistrationException e) {
                System.out.println("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: " + e.getMessage());
            }
        }

        if (choice.equals("2")) {
            System.out.print("Email: ");
            String email = scanner.nextLine();
            System.out.print("–ü–∞—Ä–æ–ª—å: ");
            String password = scanner.nextLine();

            try {
                BaseControlPanel panel = clinic.login(email, password);
                System.out.println("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥. –¢–æ–∫–µ–Ω –∞–∫—Ç–∏–≤–µ–Ω!");
                panel.demoAction(); // –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
                System.out.println("üéâ –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω–∞: " + panel.getClass().getSimpleName());
            } catch (Exception e) {
                System.out.println("‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: " + e.getMessage());
            }
        }

        repos.closeAll();
    }
}

